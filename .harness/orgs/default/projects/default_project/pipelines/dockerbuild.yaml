pipeline:
  name: Build Portfolio Image
  identifier: Build_Portfolio_Image
  projectIdentifier: default_project
  orgIdentifier: default
  tags:
    version: v1.1.<+pipeline.sequenceId>
  stages:
    - stage:
        name: docker build
        identifier: docker_build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build And Push Docker
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Docker_Connector
                    repo: kundansingh27feb/portfolio-app
                    tags:
                      - v1.1.<+pipeline.sequenceId>
                    dockerfile: docker/Dockerfile
              - step:
                  type: GitClone
                  name: Clone Repo
                  identifier: Clone_Repo
                  spec:
                    connectorRef: account.Github_OAuth_1743922765736
                    repoName: kundansingh27feb/portfolio-app
                    submoduleStrategy: recursive
                    prCloneStrategy: SourceBranch
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/bash

                      # Git config (still required to commit and push)
                      #git config --global user.email "ci@harness.io"
                      #git config --global user.name "Harness CI"

                      VERSION=$(cat docker/version.txt | tr -d 'v')
                      IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

                      NEW_PATCH=$((PATCH + 1))
                      NEW_VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
                      echo "New version: $NEW_VERSION"
                      echo $NEW_VERSION > docker/version.txt
                      git add docker/version.txt
                      git commit -m "Bump version to $NEW_VERSION"
                      git push origin main
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        delegateSelectors:
          - helm-delegate
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1743922765736
        repoName: kundansingh27feb/portfolio-app
        build: <+input>
